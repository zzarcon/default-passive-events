{"version":3,"file":"index.js","sources":["../src/index.js","../src/utils.js"],"sourcesContent":["import { eventListenerOptionsSupported } from './utils';\r\n\r\nconst defaultOptions = {\r\n  passive: true,\r\n  capture: false\r\n};\r\nconst supportedPassiveTypes = [\r\n  'scroll', 'wheel',\r\n  'touchstart', 'touchmove', 'touchenter', 'touchend', 'touchleave',\r\n  'mouseout', 'mouseleave', 'mouseup', 'mousedown', 'mousemove', 'mouseenter', 'mousewheel', 'mouseover'\r\n];\r\nconst getDefaultPassiveOption = (passive, eventName) => {\r\n  if (passive !== undefined) return passive;\r\n\r\n  return supportedPassiveTypes.indexOf(eventName) === -1 ? false : defaultOptions.passive;\r\n};\r\n\r\nconst getWritableOptions = (options) => {\r\n  const passiveDescriptor = Object.getOwnPropertyDescriptor(options, 'passive');\r\n    \r\n  return passiveDescriptor && passiveDescriptor.writable !== true && passiveDescriptor.set === undefined\r\n    ? Object.assign({}, options)\r\n    : options;\r\n};\r\n\r\nconst overwriteAddEvent = (superMethod) => {\r\n  EventTarget.prototype.addEventListener = function (type, listener, options) {\r\n    const usesListenerOptions = typeof options === 'object' && options !== null;\r\n    const useCapture          = usesListenerOptions ? options.capture : options;\r\n\r\n    options         = usesListenerOptions ? getWritableOptions(options) : {};\r\n    options.passive = getDefaultPassiveOption(options.passive, type);\r\n    options.capture = useCapture === undefined ? defaultOptions.capture : useCapture;\r\n\r\n    superMethod.call(this, type, listener, options);\r\n  };\r\n\r\n  EventTarget.prototype.addEventListener._original = superMethod;\r\n};\r\n\r\nconst supportsPassive = eventListenerOptionsSupported();\r\n\r\nif (supportsPassive) {\r\n  const addEvent = EventTarget.prototype.addEventListener;\r\n  overwriteAddEvent(addEvent);\r\n}\r\n","export const eventListenerOptionsSupported = () => {\r\n  let supported = false;\r\n\r\n  try {\r\n    const opts = Object.defineProperty({}, 'passive', {\r\n      get() {\r\n        supported = true;\r\n      }\r\n    });\r\n\r\n    window.addEventListener('test', null, opts);\r\n    window.removeEventListener('test', null, opts);\r\n  } catch (e) {}\r\n\r\n  return supported;\r\n}\r\n"],"names":["superMethod","supportedPassiveTypes","supported","opts","Object","defineProperty","get","window","addEventListener","removeEventListener","e","eventListenerOptionsSupported","addEvent","EventTarget","prototype","type","listener","options","passive","usesListenerOptions","useCapture","capture","passiveDescriptor","getOwnPropertyDescriptor","writable","undefined","set","assign","getWritableOptions","indexOf","call","this","_original"],"mappings":"IAyB2BA,EAnBrBC,EAAwB,CAC5B,SAAU,QACV,aAAc,YAAa,aAAc,WAAY,aACrD,WAAY,aAAc,UAAW,YAAa,YAAa,aAAc,aAAc,aAiC7F,GC1C6C,WAC3C,IAAIC,GAAY,EAEhB,IACE,IAAMC,EAAOC,OAAOC,eAAe,GAAI,UAAW,CAChDC,eACEJ,GAAY,KAIhBK,OAAOC,iBAAiB,OAAQ,KAAML,GACtCI,OAAOE,oBAAoB,OAAQ,KAAMN,GACzC,MAAOO,IAET,OAAOR,ED0BeS,GAEH,CACnB,IAAMC,EAAWC,YAAYC,UAAUN,iBAlBdR,EAmBPY,EAlBlBC,YAAYC,UAAUN,iBAAmB,SAAUO,EAAMC,EAAUC,GACjE,IAhB6BC,EAgBvBC,EAAyC,iBAAZF,GAAoC,OAAZA,EACrDG,EAAsBD,EAAsBF,EAAQI,QAAUJ,GAEpEA,EAAkBE,EAbK,SAACF,GAC1B,IAAMK,EAAoBlB,OAAOmB,yBAAyBN,EAAS,WAEnE,OAAOK,IAAoD,IAA/BA,EAAkBE,eAA+CC,IAA1BH,EAAkBI,IACjFtB,OAAOuB,OAAO,GAAIV,GAClBA,EAQsCW,CAAmBX,GAAW,IAC9DC,aAnBMO,KADeP,EAoBaD,EAAQC,SAnBlBA,GAEmB,IAA9CjB,EAAsB4B,QAiBgCd,KA5BpD,EA6BPE,EAAQI,aAAyBI,IAAfL,GAAoDA,EAEtEpB,EAAY8B,KAAKC,KAAMhB,EAAMC,EAAUC,IAGzCJ,YAAYC,UAAUN,iBAAiBwB,UAAYhC"}